version: '3'

# Predefiend Zookeeper Image
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
 
# Predefiend Kafka Image 
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "news:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on: 
      - zookeeper

# Predefiend Spark-Master Image
  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      
# Predefiend Spark-Worker Image
  spark-worker:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

# Our own Kafka Producer Image
  producer:
    build: .
    environment: 
      BROKER: kafka:9092
      DATA_BASE: mongo:27017
    command: bash -c "spark-submit --master spark://spark-master:7077 producer/send_data.py"
    depends_on: 
      - spark-master
      - kafka
      - mongo
      # - mysql-db

# Our own Kafka Consumer Image
  consumer:
    build: .
    environment: 
      BROKER: kafka:9092
    command: "spark-submit --master spark://spark-master:7077 consumer/consumer.py "
    depends_on:
      - spark-master
      - kafka  
      - producer

#Predefiend Mongo Database
  mongo:
    image: mongo:4.4.9
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
    ports:
      - 27017:27017

#Predefiend Mongo Database Client
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/   

# # Mysql database
#   mysql-db:
#     image: mysql
#     command: --default-authentication-plugin=mysql_native_password
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: example
#       MYSQL_USER: testuser
#       MYSQL_PASSWORD: testpassword
#       MYSQL_DATABASE: newsclassifier
#     volumes:
#       - mysql_data:/var/lib/mysql
#     ports:
#       - 33066:3306
      
# # Mysql Client Web Interface
#   mysql-adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8083:8080
volumes:
    # mysql_data:
    mongo_data:
